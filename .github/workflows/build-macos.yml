name: Build macOS App

on:
  workflow_dispatch: {}

env:
  SCHEME: VoiceInk           # ← 固定为主应用的 scheme
  CONFIGURATION: Release

jobs:
  build:
    runs-on: macos-15

    steps:
      - name: Checkout (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Select Xcode 16
        run: sudo xcode-select -s /Applications/Xcode_16.app

      - name: Show Xcode version
        run: xcodebuild -version

      # 递归寻找 .xcworkspace / .xcodeproj
      - name: Detect project file (recursive)
        id: detect
        shell: bash
        run: |
          set -e
          FILE="$(find . -name '*.xcworkspace' -type d | head -n 1 || true)"
          if [ -n "$FILE" ]; then
            KIND="workspace"
          else
            FILE="$(find . -name '*.xcodeproj' -type d | head -n 1 || true)"
            [ -n "$FILE" ] && KIND="project"
          fi
          [ -z "$FILE" ] && { echo "❌ No .xcworkspace or .xcodeproj found"; exit 1; }
          DIR="$(dirname "$FILE")"
          echo "kind=$KIND" >> "$GITHUB_OUTPUT"
          echo "file=$FILE" >> "$GITHUB_OUTPUT"
          echo "dir=$DIR"  >> "$GITHUB_OUTPUT"
          echo "Found $KIND: $FILE (dir: $DIR)"

      # 可留着调试用：列出全部 schemes
      - name: List all schemes (debug)
        shell: bash
        run: |
          set -e
          cd "${{ steps.detect.outputs.dir }}"
          BASE="$(basename "${{ steps.detect.outputs.file }}")"
          echo "=== xcodebuild -list for $BASE ==="
          if [ "${{ steps.detect.outputs.kind }}" = "workspace" ]; then
            xcodebuild -workspace "$BASE" -list
          else
            xcodebuild -project "$BASE" -list
          fi
          echo "=== end list ==="

      - name: Build
        shell: bash
        run: |
          set -e
          cd "${{ steps.detect.outputs.dir }}"
          DERIVED_DIR="$RUNNER_TEMP/DerivedData"
          BASE="$(basename "${{ steps.detect.outputs.file }}")"
          FLAGS="CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO CODE_SIGN_IDENTITY= ONLY_ACTIVE_ARCH=NO ENABLE_HARDENED_RUNTIME=NO -destination 'generic/platform=macOS' -configuration ${CONFIGURATION} -scheme '${SCHEME}' -derivedDataPath $DERIVED_DIR"
          if [ "${{ steps.detect.outputs.kind }}" = "workspace" ]; then
            eval xcodebuild -workspace "\"$BASE\"" $FLAGS build
          else
            eval xcodebuild -project "\"$BASE\"" $FLAGS build
          fi
          echo "DERIVED_DIR=$DERIVED_DIR" >> "$GITHUB_ENV"

      - name: Locate .app product
        id: findapp
        shell: bash
        run: |
          set -e
          APP_PATH="$(find "$DERIVED_DIR/Build/Products/${CONFIGURATION}" -maxdepth 4 -name '*.app' -print -quit)"
          if [ -z "$APP_PATH" ]; then
            echo "❌ No .app found under $DERIVED_DIR/Build/Products/${CONFIGURATION}"
            echo "=== Tree under Products ==="
            find "$DERIVED_DIR/Build/Products" -maxdepth 4 -type d -print || true
            exit 1
          fi
          echo "app=$APP_PATH" >> "$GITHUB_OUTPUT"
          echo "Found app: $APP_PATH"

      - name: Zip app
        if: steps.findapp.outputs.app != ''
        shell: bash
        run: |
          set -e
          APP="${{ steps.findapp.outputs.app }}"
          cd "$(dirname "$APP")"
          zip -r "VoiceInk.app.zip" "$(basename "$APP")"

      - name: Upload artifact
        if: steps.findapp.outputs.app != ''
        uses: actions/upload-artifact@v4
        with:
          name: VoiceInk.app
          path: |
            ${{ steps.findapp.outputs.app }}
            $(dirname ${{ steps.findapp.outputs.app }})/VoiceInk.app.zip
          if-no-files-found: error
