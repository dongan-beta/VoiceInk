name: Build VoiceInk Unsigned

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14
    
    steps:
    - name: Checkout VoiceInk
      uses: actions/checkout@v4
      
    - name: Setup Build Environment
      run: |
        # 安装必要的工具
        brew install cmake
        
        # 设置 Xcode
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        
    - name: Build whisper.cpp Framework
      run: |
        # 克隆 whisper.cpp
        git clone https://github.com/ggerganov/whisper.cpp.git
        cd whisper.cpp
        
        # 构建 xcframework
        chmod +x build-xcframework.sh
        ./build-xcframework.sh
        
        # 复制到项目目录
        cd ..
        cp -R whisper.cpp/whisper.xcframework .
        
        # 创建预期的目录结构
        mkdir -p whisper.cpp/build-apple
        cp -R whisper.cpp/whisper.xcframework whisper.cpp/build-apple/
        
    - name: Disable Code Signing
      run: |
        # 修改项目文件以禁用签名
        PROJECT_FILE="VoiceInk.xcodeproj/project.pbxproj"
        
        # 备份原文件
        cp "$PROJECT_FILE" "$PROJECT_FILE.backup"
        
        # 使用 Python 脚本修改（更可靠）
        python3 << 'EOF'
import re

with open("VoiceInk.xcodeproj/project.pbxproj", "r") as f:
    content = f.read()

# 删除签名相关配置
content = re.sub(r'CODE_SIGN_ENTITLEMENTS = [^;]+;', '', content)
content = re.sub(r'CODE_SIGN_IDENTITY\[sdk=macosx\*\] = "[^"]*";', 'CODE_SIGN_IDENTITY = "";', content)
content = re.sub(r'CODE_SIGN_STYLE = Automatic;', 'CODE_SIGN_STYLE = Manual;', content)
content = re.sub(r'DEVELOPMENT_TEAM = "[^"]*";', 'DEVELOPMENT_TEAM = "";', content)
content = re.sub(r'ENABLE_HARDENED_RUNTIME = YES;', 'ENABLE_HARDENED_RUNTIME = NO;', content)

# 添加禁用签名的设置
content = re.sub(
    r'(buildSettings = \{)',
    r'\1\n\t\t\t\tCODE_SIGNING_ALLOWED = NO;\n\t\t\t\tCODE_SIGNING_REQUIRED = NO;',
    content
)

with open("VoiceInk.xcodeproj/project.pbxproj", "w") as f:
    f.write(content)

print("✅ 签名设置已禁用")
EOF
        
    - name: Build VoiceInk
      run: |
        # 清理构建目录
        rm -rf build DerivedData
        
        # 构建应用
        xcodebuild \
          -project VoiceInk.xcodeproj \
          -scheme VoiceInk \
          -configuration Release \
          -derivedDataPath DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ENABLE_HARDENED_RUNTIME=NO \
          build
        
    - name: Package Application
      run: |
        # 查找构建的应用
        APP_PATH=$(find DerivedData -name "VoiceInk.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "❌ 找不到 VoiceInk.app"
          exit 1
        fi
        
        echo "✅ 找到应用: $APP_PATH"
        
        # 创建 ZIP 包
        zip -r VoiceInk-unsigned.zip "$APP_PATH"
        
        # 创建 DMG（可选）
        mkdir -p dist
        cp -R "$APP_PATH" dist/
        hdiutil create -volname "VoiceInk" \
          -srcfolder dist \
          -ov -format UDZO \
          VoiceInk-unsigned.dmg
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: VoiceInk-Build
        path: |
          VoiceInk-unsigned.zip
          VoiceInk-unsigned.dmg
