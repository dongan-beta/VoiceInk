name: Build VoiceInk Unsigned

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-14
    
    steps:
    - name: Checkout VoiceInk
      uses: actions/checkout@v4
      
    - name: Setup Build Environment
      run: |
        brew install cmake
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        
    - name: Build whisper.cpp Framework
      run: |
        git clone https://github.com/ggerganov/whisper.cpp.git
        cd whisper.cpp
        chmod +x build-xcframework.sh
        ./build-xcframework.sh
        cd ..
        cp -R whisper.cpp/whisper.xcframework .
        mkdir -p whisper.cpp/build-apple
        cp -R whisper.cpp/whisper.xcframework whisper.cpp/build-apple/
        
    - name: Disable Code Signing
      run: |
        PROJECT_FILE="VoiceInk.xcodeproj/project.pbxproj"
        cp "$PROJECT_FILE" "$PROJECT_FILE.backup"
        
        # 使用 sed 直接修改文件
        sed -i '' \
          -e 's/CODE_SIGN_ENTITLEMENTS = [^;]*;//g' \
          -e 's/CODE_SIGN_IDENTITY\[sdk=macosx\*\] = "[^"]*"/CODE_SIGN_IDENTITY = ""/g' \
          -e 's/CODE_SIGN_STYLE = Automatic/CODE_SIGN_STYLE = Manual/g' \
          -e 's/DEVELOPMENT_TEAM = "[^"]*"/DEVELOPMENT_TEAM = ""/g' \
          -e 's/ENABLE_HARDENED_RUNTIME = YES/ENABLE_HARDENED_RUNTIME = NO/g' \
          "$PROJECT_FILE"
        
        # 添加禁用签名设置
        sed -i '' \
          's/buildSettings = {/buildSettings = {\
        				CODE_SIGNING_ALLOWED = NO;\
        				CODE_SIGNING_REQUIRED = NO;/g' \
          "$PROJECT_FILE"
        
    - name: Build VoiceInk
      run: |
        rm -rf build DerivedData
        xcodebuild \
          -project VoiceInk.xcodeproj \
          -scheme VoiceInk \
          -configuration Release \
          -derivedDataPath DerivedData \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          CODE_SIGNING_ALLOWED=NO \
          ENABLE_HARDENED_RUNTIME=NO \
          build
        
    - name: Package Application
      run: |
        APP_PATH=$(find DerivedData -name "VoiceInk.app" -type d | head -1)
        
        if [ -z "$APP_PATH" ]; then
          echo "Error: VoiceInk.app not found"
          exit 1
        fi
        
        echo "Found app at: $APP_PATH"
        
        zip -r VoiceInk-unsigned.zip "$APP_PATH"
        
        mkdir -p dist
        cp -R "$APP_PATH" dist/
        hdiutil create -volname "VoiceInk" \
          -srcfolder dist \
          -ov -format UDZO \
          VoiceInk-unsigned.dmg
        
    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: VoiceInk-Build
        path: |
          VoiceInk-unsigned.zip
          VoiceInk-unsigned.dmg
